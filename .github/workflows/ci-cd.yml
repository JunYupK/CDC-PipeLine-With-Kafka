name: CI/CD Pipeline for crwaling server

on:
 push:
   branches: [ main ]
   paths:
     - 'CrawlingServer/**'
 pull_request:
   branches: [ main ]
   paths:
     - 'CrawlingServer/**'

env:
 GCP_PROJECT_ID: cdc-pipeline-with-kafka
 DOCKER_BUILDKIT: 1
 COMPOSE_DOCKER_CLI_BUILD: 1
 TAG: ${{ github.sha }}
 FASTAPI_PORT: 8080
 METRICS_PORT: 9090

jobs:
 test:
   runs-on: ubuntu-latest
   defaults:
     run:
       working-directory: ./CrawlingServer
   steps:
   - uses: actions/checkout@v2

   - name: Set up Python
     uses: actions/setup-python@v2
     with:
       python-version: '3.9'

   - name: Install dependencies
     run: |
       python -m pip install --upgrade pip
       pip install -r requirements.txt
       pip install pytest pytest-cov

   - name: Run tests
     run: |
       pytest --cov=./ --cov-report=xml

   - name: Upload coverage to Codecov
     uses: codecov/codecov-action@v2

 build-and-push:
   needs: test
   runs-on: ubuntu-latest
   if: github.ref == 'refs/heads/main'
   steps:
   - uses: actions/checkout@v2

   - name: Set up Docker Buildx
     uses: docker/setup-buildx-action@v1

   - name: Login to GCR
     uses: docker/login-action@v1
     with:
       registry: gcr.io
       username: _json_key
       password: ${{ secrets.GCP_SA_KEY }}

   - name: Build and push
     uses: docker/build-push-action@v2
     with:
       context: ./CrawlingServer
       push: true
       tags: |
         gcr.io/${{ env.GCP_PROJECT_ID }}/crawler:${{ github.sha }}
         gcr.io/${{ env.GCP_PROJECT_ID }}/crawler:latest

 deploy:
   needs: build-and-push
   runs-on: self-hosted
   if: github.ref == 'refs/heads/main'
   steps:
   - uses: actions/checkout@v2

   - name: Update deployment files
     working-directory: ./CrawlingServer
     run: |
       echo "TAG=${GITHUB_SHA}" >> .env

   - name: Deploy application
     working-directory: ./CrawlingServer
     run: |
       chmod +x ../.github/scripts/deploy.sh
       chmod +x ../.github/scripts/health_check.sh
       ../.github/scripts/deploy.sh