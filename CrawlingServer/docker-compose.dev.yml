version: '3'
services:
  # 크롤링 서버
  crawler:
    build:
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - "8080:8080"  # FastAPI
      - "8000:8000"  # Prometheus metrics
    environment:
      - REDIS_HOST=redis.internal
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - POSTGRES_HOST=postgres.internal
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - KAFKA_BOOTSTRAP_SERVERS=kafka.internal:29092
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgres.internal
      - DB_PORT=${DB_PORT}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    command: uvicorn main:app --host 0.0.0.0 --port 8080
    networks:
      - infra-network
    volumes:
      - ./:/app
    restart: unless-stopped

  # Crawl4AI 서비스 추가
  crawl4ai:
    image: unclecode/crawl4ai:all-amd64
    platform: linux/amd64
    container_name: crawl4ai-server
    ports:
      - "11235:11235"
    environment:
      - CRAWL4AI_API_TOKEN=home
      - MAX_CONCURRENT_TASKS=10
    volumes:
      - /dev/shm:/dev/shm
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 1G
    networks:
      - infra-network
    restart: unless-stopped

networks:
  infra-network:
    external: true
    name: infra-network